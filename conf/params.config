// Main pipeline configs
// 26/07/2022

process {

    container_py = "suzannejin/3dtf@sha256:74db41cb6fd9efb95f3d7324811c74100606636970f5fdeaa7bbfef3f65c32ed"   // suzannejin/3dtf:python3  |  python 3.9.5
    container_r  = "suzannejin/3dtf@sha256:f41f7adeda9c7acc62a536bd025806f6da95b1332240e8c0a5203ad6ab9551d5"   // suzannejin/3dtf:r  |  r 4.2.1

    withName: align_dbd_with_hmm_r {
        publishDir = [
            path    : { "${params.OUTPUT_DIR}/dbd_aln/${dbd_family}" },
            pattern : "*.Viterbi_semiglobal",
            mode    : 'copy'
        ]
        container = "${container_r}"
    }
    withName: align_dbd_with_hmm_py {
        publishDir = [
            path    : { "${params.OUTPUT_DIR}/dbd_aln/${dbd_family}" },
            pattern : "*.align_1d.aln",
            mode    : 'copy'
        ]
        container = "${container_py}"
    }
    withName: calculate_score_1d {
        publishDir = [
            path    : { "${params.OUTPUT_DIR}/dbd_score/${dbd_family}" },
            pattern :"*.{PctID,Blosum62}.NA.csv.gz",
            mode    : 'copy'
        ]
        container = "${container_py}" 
    }
    withName: calculate_escore_overlap {
        publishDir  = [
            path    : { "${params.OUTPUT_DIR}/overlap/${train}/${tf_family}" },
            pattern : "*.EscoreOverlaps.txt",
            mode    : 'copy'
        ]
        container = "${container_py}"    
    }
    withName: tf_to_Y_Ind {
        publishDir  = [
            path    : { "${params.OUTPUT_DIR}/tf_construct/${train}/${tf_family}" },
            pattern : "*.{Y,TrainInd,TestInd}.csv*",
            mode    : 'copy'
        ]
        container = "${container_py}"
    }
    withName: chunk_scores {
        container = "${container_py}"
    }
    withName: dbd_aln_to_tf_construct {
        publishDir  = [
            path    : { "${params.OUTPUT_DIR}/tf_construct/${train}/${tf_family}" },
            mode    : 'copy'
        ]
        container = "${container_py}"    
    }
    withName: run_similarity_regression_training {
        publishDir  = [
            path    : { "${params.OUTPUT_DIR}/model/${tf_family}" },
            pattern : "*.{ModelCoefficients,Xscales}.csv",
            mode    : 'copy'
        ]
        container = "${container_r}"  
    }
    withName: plot_similarity_regression_pr_curve {
        publishDir  = [
            path    : { "${params.OUTPUT_DIR}/performance/${tf_family}" },
            pattern : "*.{pr,nr}_curve.{pdf,txt}",
            mode    : 'copy'
        ]
        container = "${container_r}"  
    }
    withName: "run_similarity_regression_classification_testset|run_similarity_regression_classification_overall" {
        publishDir  = [
            [
                path    : { "${params.OUTPUT_DIR}/model/${tf_family}" },
                pattern : "*.Thresholds.txt",
                mode    : 'copy'
            ],
            [
                path    : {"${params.OUTPUT_DIR}/performance/${tf_family}"},
                pattern : "*.{Performance,Predictions}.*.csv",
                mode    : 'copy'
            ]
        ]
        container = "${container_py}"  
    }
    withName: run_similarity_regression_rank {
        publishDir  = [
            [
                path    : { "${params.OUTPUT_DIR}/performance/${tf_family}" },
                pattern : "*.Performance.csv",
                mode    : 'copy'
            ],
            [
                path    : { "${params.OUTPUT_DIR}/final/${tf_family}" },
                pattern : "F*.json",
                mode    : 'copy'
            ]
        ]
        container = "${container_py}"  
    }
    withName: run_similarity_regression_predict {
        publishDir  = [
            path    : { "${params.OUTPUT_DIR}/preds/${train}/${tf_family}" },
            pattern : "*.{BestMethod,original}.Predictions.csv",
            mode    : 'copy'

        ]
        container = "${container_py}"  
    }
    withName: run_similarity_regression_predict_plot {
        publishDir  = [
            path    : { "${params.OUTPUT_DIR}/preds/${train}/${tf_family}" },
            pattern : "*.{pr,nr}_curve.{pdf,txt}",
            mode    : 'copy'
            
        ]
        container = "${container_r}"  
    }
}