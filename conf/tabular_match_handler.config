// Tabular formatted files matcher, given two csv files and a common key 
// it creates an outputfile that joins lines having identical key
// 9/06/2023

// Here are defined params used by this subworkflow


params {
	in1_TAB			=	null		// input file with same unique column separator
	in2_TAB			=	null		// input file with same unique column separator
	out_TAB			=	null		// the name of the output file, it also works as a switch in behaviour of the subworkflow
							// if it is given a value only one output file will be created no matter how many inputs pairs
							// istead if this field is not flase or null many output files with
							// variable name + common suffix will be written, as many as the pairs
	suffix_TAB		=	'.tsv'		// the common suffix that is applied in case of many
	pos1_TAB		=	0		// the column/position/index of the field that has to be used as key for in1
	pos2_TAB		=	0		// same as above but for in2
	del1_TAB		=	'\\t'		// separator/delimiter of fields of in1
	del2_TAB		=	'\\t'		// separator/delimiter of fields of in2
	check_TAB		=	false		// flag for debug, to check value types inside script
	GIVEN_TABULAR_PROFILE	=	true		// just to check if this profile was given from command line, otherwise error message sent
}


// Here are process specific directive

process {
        withLabel: 'tabular' {
                container = "python@sha256:fe2971bedd019d952d4458afb1fe4e222ddb810150008c1dee5a068d38bb0e43"  // python 3.9 rdflib
                publishDir = [
                                path: { "${params.OUTPUT_DIR}" },
                                mode: 'copy',
                                overwrite: true,
                                //saveAs: { filename -> if (params.publish_UN == true) filename
                                //                                                else null
                                //                                                }
                ]
        }
}
